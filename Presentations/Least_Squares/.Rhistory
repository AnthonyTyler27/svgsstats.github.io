install.packages("DT")
library(tidyverse)
library(tibble)
library(ggthemes)
library(moderndive)
knitr::opts_chunk$set(echo=FALSE,error=FALSE,warning=FALSE)
theme_set(theme_few())
ranData <- tibble(x1 = anscombe$x1, y1= anscombe$y1)
plot <- ranData %>% ggplot(aes(x=x1,y=y1))+geom_point()
plot
possibilities <- tibble(m=runif(400,0,3),b=runif(400,1,4))
plot + geom_abline(data=possibilities,aes(slope=m,intercept=b),alpha=.1)
plot + geom_abline(data=possibilities,aes(slope=m,intercept=b),alpha=.1) + geom_abline(aes(slope=0.56,intercept=2.5),color="red",size=1)
plot + geom_abline(data=possibilities,aes(slope=m,intercept=b),alpha=.1) + geom_abline(aes(slope=0.56,intercept=2.5),color="red",size=1) + geom_segment(aes(xend=x1,yend=0.56*x1+2.5),color="blue",size=1)
plot + geom_abline(data=possibilities,aes(slope=m,intercept=b),alpha=.1) + geom_abline(aes(slope=0.56,intercept=2.5),color="red",size=1) + geom_segment(aes(xend=x1,yend=0.56*x1+2.5),color="blue",size=1) + geom_segment(aes(xend = x1 + (y1 - (0.56*x1+2.5)),yend=y1),color="blue",size=1) +
geom_segment(aes(x=x1,y=0.56*x1+2.5,xend=x1+(y1 - (0.56*x1+2.5)),yend=0.56*x1+2.5),color="blue",size=1) +
geom_segment(aes(x=x1+(y1 - (0.56*x1+2.5)),y=0.56*x1+2.5,yend=y1,xend=x1+(y1-(0.56*x1+2.5))),color="blue",size=1)
sum_of_squares <- function(slope,intercept) {
sum = 0
for (row in 1:nrow(ranData)){
sum = sum + (ranData$y1[row]-(slope*ranData$x1[row]+intercept))^2
}
return(sum)
}
possibilities <- possibilities %>% mutate(sum_of_squares=sum_of_squares(m,b))
top_10 <- possibilities %>% top_n(-10,sum_of_squares)
plot <- plot + geom_abline(data=top_10,aes(slope=m,intercept=b,color=sum_of_squares),alpha=.8)
plot
```
sum_of_squares <- function(slope,intercept) {
sum = 0
for (row in 1:nrow(ranData)){
sum = sum + (ranData$y1[row]-(slope*ranData$x1[row]+intercept))^2
}
return(sum)
}
possibilities <- possibilities %>% mutate(sum_of_squares=sum_of_squares(m,b))
top_10 <- possibilities %>% top_n(-10,sum_of_squares)
plot <- plot + geom_abline(data=top_10,aes(slope=m,intercept=b,color=sum_of_squares),alpha=.8)
plot
```
sum_of_squares <- function(slope,intercept) {
sum = 0
for (row in 1:nrow(ranData)){
sum = sum + (ranData$y1[row]-(slope*ranData$x1[row]+intercept))^2
}
return(sum)
}
possibilities <- possibilities %>% mutate(sum_of_squares=sum_of_squares(m,b))
top_10 <- possibilities %>% top_n(-10,sum_of_squares)
plot <- plot + geom_abline(data=top_10,aes(slope=m,intercept=b,color=sum_of_squares),alpha=.8)
plot
plot + geom_abline(data=possibilities %>% top_n(-1,sum_of_squares),aes(slope=m,intercept=b),color="red",size=1)
plot + geom_abline(data=possibilities,aes(slope=m,intercept=b),alpha=.1) + geom_abline(aes(slope=0.56,intercept=2.5),color="red",size=1) + geom_segment(aes(xend=x1,yend=0.56*x1+2.5),color="blue",size=1) + geom_segment(aes(xend = x1 + (y1 - (0.56*x1+2.5)),yend=y1),color="blue",size=1) +
geom_segment(aes(x=x1,y=0.56*x1+2.5,xend=x1+(y1 - (0.56*x1+2.5)),yend=0.56*x1+2.5),color="blue",size=1) +
geom_segment(aes(x=x1+(y1 - (0.56*x1+2.5)),y=0.56*x1+2.5,yend=y1,xend=x1+(y1-(0.56*x1+2.5))),color="blue",size=1)
sum_of_squares <- function(slope,intercept) {
sum = 0
for (row in 1:nrow(ranData)){
sum = sum + (ranData$y1[row]-(slope*ranData$x1[row]+intercept))^2
}
return(sum)
}
possibilities <- possibilities %>% mutate(sum_of_squares=sum_of_squares(m,b))
top_10 <- possibilities %>% top_n(-10,sum_of_squares)
plot <- plot + geom_abline(data=top_10,aes(slope=m,intercept=b,color=sum_of_squares),alpha=.8)
plot
```
library(tidyverse)
library(tibble)
library(ggthemes)
library(moderndive)
knitr::opts_chunk$set(echo=FALSE,error=FALSE,warning=FALSE)
theme_set(theme_few())
ranData <- tibble(x1 = anscombe$x1, y1= anscombe$y1)
plot <- ranData %>% ggplot(aes(x=x1,y=y1))+geom_point()
plot
possibilities <- tibble(m=runif(400,0,3),b=runif(400,1,4))
plot + geom_abline(data=possibilities,aes(slope=m,intercept=b),alpha=.1)
plot + geom_abline(data=possibilities,aes(slope=m,intercept=b),alpha=.1) + geom_abline(aes(slope=0.56,intercept=2.5),color="red",size=1)
plot + geom_abline(data=possibilities,aes(slope=m,intercept=b),alpha=.1) + geom_abline(aes(slope=0.56,intercept=2.5),color="red",size=1) + geom_segment(aes(xend=x1,yend=0.56*x1+2.5),color="blue",size=1)
plot + geom_abline(data=possibilities,aes(slope=m,intercept=b),alpha=.1) + geom_abline(aes(slope=0.56,intercept=2.5),color="red",size=1) + geom_segment(aes(xend=x1,yend=0.56*x1+2.5),color="blue",size=1) + geom_segment(aes(xend = x1 + (y1 - (0.56*x1+2.5)),yend=y1),color="blue",size=1) +
geom_segment(aes(x=x1,y=0.56*x1+2.5,xend=x1+(y1 - (0.56*x1+2.5)),yend=0.56*x1+2.5),color="blue",size=1) +
geom_segment(aes(x=x1+(y1 - (0.56*x1+2.5)),y=0.56*x1+2.5,yend=y1,xend=x1+(y1-(0.56*x1+2.5))),color="blue",size=1)
plot + geom_abline(data=possibilities %>% top_n(-1,sum_of_squares),aes(slope=m,intercept=b),color="red",size=1)
sum_of_squares <- function(slope,intercept) {
sum = 0
for (row in 1:nrow(ranData)){
sum = sum + (ranData$y1[row]-(slope*ranData$x1[row]+intercept))^2
}
return(sum)
}
possibilities <- possibilities %>% mutate(sum_of_squares=sum_of_squares(m,b))
top_10 <- possibilities %>% top_n(-10,sum_of_squares)
plot <- plot + geom_abline(data=top_10,aes(slope=m,intercept=b,color=sum_of_squares),alpha=.8)
plot
```
library(tidyverse)
library(tibble)
library(ggthemes)
library(moderndive)
knitr::opts_chunk$set(echo=FALSE,error=FALSE,warning=FALSE)
theme_set(theme_few())
ranData <- tibble(x1 = anscombe$x1, y1= anscombe$y1)
plot <- ranData %>% ggplot(aes(x=x1,y=y1))+geom_point()
plot
possibilities <- tibble(m=runif(400,0,3),b=runif(400,1,4))
plot + geom_abline(data=possibilities,aes(slope=m,intercept=b),alpha=.1)
plot + geom_abline(data=possibilities,aes(slope=m,intercept=b),alpha=.1) + geom_abline(aes(slope=0.56,intercept=2.5),color="red",size=1)
plot + geom_abline(data=possibilities,aes(slope=m,intercept=b),alpha=.1) + geom_abline(aes(slope=0.56,intercept=2.5),color="red",size=1) + geom_segment(aes(xend=x1,yend=0.56*x1+2.5),color="blue",size=1)
plot + geom_abline(data=possibilities,aes(slope=m,intercept=b),alpha=.1) + geom_abline(aes(slope=0.56,intercept=2.5),color="red",size=1) + geom_segment(aes(xend=x1,yend=0.56*x1+2.5),color="blue",size=1) + geom_segment(aes(xend = x1 + (y1 - (0.56*x1+2.5)),yend=y1),color="blue",size=1) +
geom_segment(aes(x=x1,y=0.56*x1+2.5,xend=x1+(y1 - (0.56*x1+2.5)),yend=0.56*x1+2.5),color="blue",size=1) +
geom_segment(aes(x=x1+(y1 - (0.56*x1+2.5)),y=0.56*x1+2.5,yend=y1,xend=x1+(y1-(0.56*x1+2.5))),color="blue",size=1)
sum_of_squares <- function(slope,intercept) {
sum = 0
for (row in 1:nrow(ranData)){
sum = sum + (ranData$y1[row]-(slope*ranData$x1[row]+intercept))^2
}
return(sum)
}
possibilities <- possibilities %>% mutate(sum_of_squares=sum_of_squares(m,b))
top_10 <- possibilities %>% top_n(-10,sum_of_squares)
plot <- plot + geom_abline(data=top_10,aes(slope=m,intercept=b,color=sum_of_squares),alpha=.8)
plot
```
sum_of_squares <- function(slope,intercept) {
sum = 0
for (row in 1:nrow(ranData)){
sum = sum + (ranData$y1[row]-(slope*ranData$x1[row]+intercept))^2
}
return(sum)
}
possibilities <- possibilities %>% mutate(sum_of_squares=sum_of_squares(m,b))
top_10 <- possibilities %>% top_n(-10,sum_of_squares)
plot <- plot + geom_abline(data=top_10,aes(slope=m,intercept=b,color=sum_of_squares),alpha=.8)
plot
plot + geom_abline(data=possibilities %>% top_n(-1,sum_of_squares),aes(slope=m,intercept=b),color="red",size=1)
```
plot + geom_abline(data=possibilities %>% top_n(-1,sum_of_squares),aes(slope=m,intercept=b),color="red",size=1)
load(url("http://www.lock5stat.com/datasets/MammalLongevity.rda"))
DT::datatable(MammalLongevity,
fillContainer = FALSE,
options = list(pageLength = 6))
xaringan:::inf_mr()
MammalLongevity %>% ggplot(aes(x=Gestation,y=Longevity))+geom_point()
View(MammalLongevity)
MammalLongevity %>% ggplot(aes(x=Gestation,y=Longevity))+geom_point()+geom_point(data=MammalLongevity %>% filter(Animal==elephant), aes(x=Gestation,y=Longevity),color="red"))
MammalLongevity %>% ggplot(aes(x=Gestation,y=Longevity))+geom_point()+geom_point(data=MammalLongevity %>% filter(Animal=="elephant"), aes(x=Gestation,y=Longevity),color="red"))
MammalLongevity %>% ggplot(aes(x=Gestation,y=Longevity))+geom_point()+geom_point(data=MammalLongevity %>% filter(Animal=="elephant"), aes(x=Gestation,y=Longevity),color="red")
MammalLongevity %>% ggplot(aes(x=Gestation,y=Longevity))+geom_point()+geom_point(data=MammalLongevity %>% filter(Animal=="elephant"), aes(x=Gestation,y=Longevity),color="red",size=2)
MammalLongevity %>% ggplot(aes(x=Gestation,y=Longevity))+geom_point()+geom_point(data=MammalLongevity %>% filter(Animal=="elephant"), aes(x=Gestation,y=Longevity),color="red",size=3)
theElephant <- MammalLongevity %>% filter(Animal=="elephant")
MammalLongevity %>% ggplot(aes(x=Gestation,y=Longevity))+geom_point()+geom_point(data=theElephant, aes(x=Gestation,y=Longevity),color="red",size=3)
MammalLongevity %>% ggplot(aes(x=Gestation,y=Longevity))+geom_point()+geom_point(data=theElephant, aes(x=Gestation,y=Longevity),color="red",size=3)
theElephant <- MammalLongevity %>% filter(Animal=="elephant")
MammalLongevity %>% ggplot(aes(x=Gestation,y=Longevity))+geom_point()+geom_point(data=theElephant, aes(x=Gestation,y=Longevity),color="red",size=3) + geom_label(aes(label=Animal))
theElephant <- MammalLongevity %>% filter(Animal=="elephant")
MammalLongevity %>% ggplot(aes(x=Gestation,y=Longevity))+geom_point()+geom_point(data=theElephant, aes(x=Gestation,y=Longevity),color="red",size=3) + geom_label(aes(label=Animal),nudge_y=1)
theElephant <- MammalLongevity %>% filter(Animal=="elephant")
MammalLongevity %>% ggplot(aes(x=Gestation,y=Longevity))+geom_point()+geom_point(data=theElephant, aes(x=Gestation,y=Longevity),color="red",size=3) + geom_label(aes(label=Animal),nudge_y=-5)
theElephant <- MammalLongevity %>% filter(Animal=="elephant")
MammalLongevity %>% ggplot(aes(x=Gestation,y=Longevity))+geom_point()+geom_point(data=theElephant, aes(x=Gestation,y=Longevity),color="red",size=3) + geom_label(aes(label=Animal),nudge_y=-2)
theElephant <- MammalLongevity %>% filter(Animal=="elephant")
MammalLongevity %>% ggplot(aes(x=Gestation,y=Longevity))+geom_point()+geom_point(data=theElephant, aes(x=Gestation,y=Longevity),color="red",size=3) + geom_label(data = theElephant,aes(label=Animal),nudge_y=-2)
theElephant <- MammalLongevity %>% filter(Animal=="elephant")
MammalLongevity %>% ggplot(aes(x=Gestation,y=Longevity))+geom_point()+geom_point(data=theElephant, aes(x=Gestation,y=Longevity),color="red",size=3) + geom_label(data = theElephant,aes(label=Animal),nudge_y=-2)
theElephant <- MammalLongevity %>% filter(Animal=="elephant")
MammalLongevity %>% ggplot(aes(x=Gestation,y=Longevity))+geom_point()+geom_point(data=theElephant, aes(x=Gestation,y=Longevity),color="red",size=3) + geom_label(data = theElephant,aes(label=Animal),nudge_x=-1,nudge_y=-2)
theElephant <- MammalLongevity %>% filter(Animal=="elephant")
MammalLongevity %>% ggplot(aes(x=Gestation,y=Longevity))+geom_point()+geom_point(data=theElephant, aes(x=Gestation,y=Longevity),color="red",size=3) + geom_label(data = theElephant,aes(label=Animal),nudge_x=-1,nudge_y=-2)
theElephant <- MammalLongevity %>% filter(Animal=="elephant")
MammalLongevity %>% ggplot(aes(x=Gestation,y=Longevity))+geom_point()+geom_point(data=theElephant, aes(x=Gestation,y=Longevity),color="red",size=3) + geom_label(data = theElephant,aes(label=Animal),nudge_x=-5,nudge_y=-2)
MammalLongevity %>% filter(Animal != "elephant") +
ggplot(aes(x=Gestation,y=Longevity)) + geom_point()
MammalLongevity %>% filter(Animal != "elephant") %>%
ggplot(aes(x=Gestation,y=Longevity)) + geom_point()
MammalLongevity %>% filter(Animal != "elephant") %>%
ggplot(aes(x=Gestation,y=Longevity)) + geom_point()
MammalLongevity %>% filter(Animal != "elephant") %>%
ggplot(aes(x=Gestation,y=Longevity)) + geom_point() +
geom_smooth(method="lm",se=FALSE)
theModel <- lm(MammalLongevity$Longevity~MammalLongevity$Gestation)
summary(theModel)
theModel$coefficients
theModel$coefficients[0]
theModel$coefficients[1]
theModel$coefficients[2]
theModel$coefficients[2]*3
theModel$coefficients[2]*2
theModel$coefficients[2]
summary(theModel)
summary(theModel)
library(moderndive)
theModel %>% get_regression_table()
theModel$coefficients[1]+1
theModel$coefficients[1]+1 - theModel$coefficients[2]*3
as.numeric(theModel$coefficients[1]+1 - theModel$coefficients[2]*3)
