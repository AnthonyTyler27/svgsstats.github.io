---
title: "Contingency Tables"
subtitle: "Finding Relationships between Categorical Variables"
author: "1.7 in OI"
output:
  xaringan::moon_reader:
    lib_dir: libs
    css: xaringan-themer.css
    nature:
      highlightStyle: github
      highlightLines: true
      countIncrementalSlides: false
      beforeInit: "custom.js"
    chakra: "remark-latest.min.js"
---
```{r xaringan-themer, include = FALSE}
library(xaringanthemer)
library(ggthemr)
ggthemr("dust")


solarized_light(
  header_font_google = google_font("Raleway","400","400i"),
  text_font_google   = google_font("Open Sans", "200", "200i"),
  code_font_google   = google_font("Cousine"),
  text_font_size = "1.75em",
  header_h1_font_size="1.5em"

)

#mono_light(
  #base_color = "#002244",
  #header_font_google = google_font("Josefin Sans"),
  #text_font_google   = google_font("Montserrat", "300", "300i"),
  #code_font_google   = google_font("Droid Mono"),
  #text_font_size = "1.75em",
  #header_h1_font_size="1.5em"
  
#)

```
# Objectives

- Construct and interpret contingency tables

- Describe relationships between categorcial variables
---
class: center, middle, inverse

# A **contingency** tables describes two categorical variables, organizing counts according to a row variable and a column variable.
---
```{r echo=FALSE,message=FALSE}

suppressWarnings(library(tidyverse))

at_school <- readRDS(url("https://svgsstats.github.io/census_at_school.rds"))

```
# USA Census at School data

### We are going to create a table to help us analyze the relationship between student responses to the gender question and the superpower question. 
________________________________________
Which of the following superpowers would you most like to have?
.pull-left[
- Invisibility
- Telepathy (read minds)
- Freeze time
]
.pull-right[
- Super strength
- Fly
]
---
# Contingency Table Construction

We will use a package called `janitor` to contruct the contingency table.  You will need to load it by using the `library()` function.

```{r eval=FALSE}
library(janitor) 
```

```{r echo=FALSE,error=FALSE,message=FALSE}
suppressWarnings(library(janitor,quietly=TRUE) )
```

The basic format of a call is:

```{r eval=FALSE}
tabyl(dataset, var1, var2)
```

Or, you can use the piping operator and call it like so: 

```{r eval=FALSE}
dataset %>% tabyl(var1,var2)
```

---
# Let's do it!

Since we want the relationship between `superpower` and `gender`, we would simply run: 

```{r eval=FALSE}
at_school %>% 
  tabyl(superpower,gender)
```

```{r echo=FALSE}
suppressWarnings(library(knitr))
at_school <- at_school %>% clean_names()
at_school %>% 
  tabyl(superpower,gender) %>% 
  kable(format="html")
```

---
# Want the Totals?

There's an option for that too. 

```{r}
at_school %>% 
  tabyl(superpower,gender) %>% adorn_totals(where=c("row","col"))
```

The `adorn_total()` function takes an optional argument `where=` with values `"row"`, `"col"`, or `c("row","col")`.  
---
# Percentages

Very often it can hard to see relationships in a contingency table when we're looking at raw counts. We can turn the raw counts into percentages as needed. 

```{r}
at_school %>% 
  tabyl(superpower,gender) %>% 
  adorn_percentages()
```

---
# Percentages

Very often it can hard to see relationships in a contingency table when we're looking at raw counts. We can turn the raw counts into percentages as needed. 

```{r}
at_school %>% 
  tabyl(superpower,gender) %>% 
  adorn_percentages(denominator="col")
```

---
# Percentages

Very often it can hard to see relationships in a contingency table when we're looking at raw counts. We can turn the raw counts into percentages as needed. 

```{r}
at_school %>% 
  tabyl(superpower,gender) %>% 
  adorn_percentages(denominator="all") 
```
---
# Creating Bar Graphs

The `geom_bar` geom will create bar graphs. 

```{r fig.width=7, fig.height=5}
at_school %>% ggplot(aes(x=superpower))+
  geom_bar()
```
---
# Horizontal Bar Graphs

They can be easier to read when viewed horizontally.

```{r fig.height=4.5,fig.width=8}
at_school %>% 
  ggplot(aes(x=superpower))+
  geom_bar()+
  coord_flip()
```

---
# Stacked Bar Graphs

Stacked bar graphs are useful tools for seeing relationships between categorical variables. 

```{r fig.width=7, fig.height=4.25}
at_school %>% ggplot(aes(x=superpower,fill=gender)) + 
  geom_bar()
```
---
# Stacked Bar Graph with %

```{r fig.width=7, fig.height=4.5}
at_school %>% ggplot(aes(x=superpower,fill=gender)) + 
  geom_bar(position="fill") +
  labs(y="Proportion")
```

---
# Side-by-side Bar Graphs

```{r fig.width=8, fig.height=5.5}
at_school %>% ggplot(aes(x=superpower,fill=gender)) + 
  geom_bar(position="dodge")
```
---
# Can you create this graph? 

```{r echo=FALSE, fig.width=11,fig.height=7}
at_school %>% ggplot(aes(x=gender,fill=superpower)) + 
  geom_bar(position="dodge")
```
