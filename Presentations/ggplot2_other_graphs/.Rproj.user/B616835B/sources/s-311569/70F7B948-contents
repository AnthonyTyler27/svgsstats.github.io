---
title: "Constructing Other Graphs and Interpreting Graphs"
author: "3.4, 3.5, 3.7, and 3.8 in MD"
output:
  xaringan::moon_reader:
    lib_dir: libs
    css: ["default","default-fonts","my_theme.css"]
    nature:
      highlightStyle: github
      highlightLines: true
      countIncrementalSlides: false
      beforeInit: "custom.js"
    chakra: "remark-latest.min.js"
---
# Foreign-born Population

```{r message=FALSE,echo=FALSE}
library(ggplot2)
library(readr)
state_foreign_born <- read_csv("state_foreign_born.csv")
```

```{r eval=FALSE}
  head(state_foreign_born)
```

```{r echo=FALSE,results="asis"}
  DT::datatable(state_foreign_born,
                fillContainer = FALSE, 
                options = list(pageLength = 6))
```

---
# Making a Histogram

The histogram is a popular choice for showing the distribution of a **univariate** dataset. 

```{r message=FALSE, fig.height=4, fig.width=6}
ggplot(state_foreign_born,aes(x=percent_foreign_born))+
  geom_histogram()  #<<
```

---
# Making a Histogram
`ggplot` will bin your data into 30 bins, but you can customize this using either the `bins`, 

```{r message=FALSE, fig.height=4, fig.width=6, message=FALSE}
ggplot(state_foreign_born,aes(x=percent_foreign_born))+
  geom_histogram(bins=8)  #<<
```

---
# Making a Histogram
`ggplot` will bin your data into 30 bins, but you can customize this using either the `bins`, `binwidth`, 

```{r message=FALSE, fig.height=4, fig.width=6, message=FALSE}
ggplot(state_foreign_born,aes(x=percent_foreign_born))+
  geom_histogram(binwidth=5)  #<<
```
---
# Making a Histogram
`ggplot` will bin your data into 30 bins, but you can customize this using either the `bins`, `binwidth`, or `breaks` argument.

```{r message=FALSE, fig.height=4, fig.width=6, message=FALSE}
ggplot(state_foreign_born,aes(x=percent_foreign_born))+
  geom_histogram(breaks=seq(0,30,5))  #<<
```
---
# On bin widths
Different choices for bin widths and bin starting/ending locations can give you a histogram that looks differently. 


---
# Density Curve
A density curve can be a useful tool to eliminate this drawback. 
```{r message=FALSE, fig.height=4, fig.width=6, message=FALSE}
ggplot(state_foreign_born,aes(x=percent_foreign_born))+
  geom_density(fill="red",alpha=0.5)#<<
```
---
# Back to Histograms
The default look is a little bland.  You can alter the
outline of each bar and the fill using the color and fill
properties.

```{r fig.height=4,fig.width=6}
ggplot(state_foreign_born,aes(x=percent_foreign_born))+
  geom_histogram(breaks=seq(0,30,5),color="white")
```

---
# Making a Histogram
The default look is a little bland.  You can alter the
outline of each bar and the fill using the color and fill
properties. 

```{r fig.height=4,fig.width=6}
ggplot(state_foreign_born,aes(x=percent_foreign_born))+
  geom_histogram(breaks=seq(0,30,5),color="white",fill="orangered")
```
---
# Y-axis Counts vs Density
You can choose to have counts or density for the y-axis. 

```{r fig.height=5,fix.width=7}
ggplot(state_foreign_born, aes(x=percent_foreign_born,y=..density..)) +
  geom_histogram(breaks=seq(0,30,5),color="white")
```

---
# Describing Distributions

The purpose of a graph is to help us gain insight about the 
underlying data.  When looking at graphs of univariate datasets,
we should consider four main features:
- Shape
- Outliers
- Center
- Spread

--

### Don't forget your SOCS!

---
# Shape

- Symmetric

  Can you fold it along a vertical line and have both edges match roughly?
  
--

- Skewed and direction of skewness

  The thinner ends of a distribution are called the **tails**.  If one tail stretches out further than the other, it is said to be skewed in the direction of the longer tail. 
  
---
# Approximately Symmetric

```{r echo=FALSE,fig.width=8, fig.height=6}
df <- tibble::data_frame(x=rnorm(1000,50,5))
ggplot(df, aes(x=x))+geom_histogram(bins=8,color="white")
```

---
# Skewed Left/Right

.pull-left[
```{r echo=FALSE}
df <- tibble::data_frame(x=rgeom(n=1000,p=1/8))
ggplot(df, aes(x=x))+
  geom_histogram(bins=8,color="white")+
  ggtitle("Skewed Right")+
  theme(plot.title=element_text(size=22))
```
]

.pull-right[
```{r echo=FALSE}
df <- tibble::data_frame(x=100-rgeom(n=1000,p=1/20))
ggplot(df, aes(x=x))+
  geom_histogram(bins=8,color="white")+
  ggtitle("Skewed Left")+
  theme(plot.title=element_text(size=22))
```
]

---
# Shape - Modality

Is there a single central peak or several separated peaks?   You should identify the peaks (modes) and the location of the peaks.

.pull-left[
```{r echo=FALSE}
df <- runif(500,10,90)
df <- c(df,rnorm(300,40,5))
df <- tibble::data_frame(x=df)
ggplot(df,aes(x=x)) + 
  geom_histogram(breaks=seq(10,90,5),color="white") + 
  scale_x_continuous(breaks=seq(0,100,10)) +
  ggtitle("Single peak/unimodal") +
  theme(plot.title=element_text(size=22))
```
]

.pull-right[
```{r echo=FALSE}
df <- runif(500,10,90)
df <- c(df,rnorm(300,30,3))
df <- c(df,rnorm(150,70,2))
df <- tibble::data_frame(x=df)
ggplot(df,aes(x=x)) + 
  geom_histogram(breaks=seq(10,90,5),color="white") + 
  scale_x_continuous(breaks=seq(0,100,10)) +
  ggtitle("Bimodal") +
  theme(plot.title=element_text(size=22))
```
]

---
# Outliers

### Do any unusual features stick out? 
- Are there unusual values? 
  Values that are unsusually high or low. 
  
- Gaps in the data?

---
# Center

Tell numerically where the center of the data is. 

Common measurements of center are: 
- Mean (symbolized with either a $\mu$ for population mean or $\overline x$ for a sample mean)
- Median
- Mode (location of peaks)

---
# Spread
Tell (numerically) how spread out the data is.  

Are values tightly clustered around the center or spread out? 
- Standard deviation – “average“ distance between the data points and the mean
- Inter-Quartile Range (IQR) = range of the middle 50% of the data = Q3 – Q1
- Range = maximum – minimum (should exclude outliers if there are any)

---
# Describe the Distribution

```{r fig.height=4,fig.width=6, echo=FALSE}
ggplot(state_foreign_born,aes(x=percent_foreign_born))+
  geom_histogram(breaks=seq(0,30,5),color="white")
```

---
class:inverse,center,middle

# Construct a histogram of the variable eruptions from the `faithful` dataset, and describe the distribution.

---
class: center,middle
```{r echo=FALSE, fig.width=10,fig.height=8}
ggplot(faithful,aes(x=eruptions,y=..density..)) + 
  geom_histogram(color="white",bins=14)
```

---
class:center,middle
```{r echo=FALSE, fig.width=10, fig.height=8}
ggplot(faithful,aes(x=eruptions,y=..density..)) + 
  geom_histogram(color="white",bins=14) +
  geom_density(fill="darkred",alpha=0.5)
```

---
# Dotplots geom_dotplot()
```{r fig.width=10, fig.height=8, message=FALSE}
ggplot(faithful,aes(x=eruptions)) + 
  geom_dotplot() #<<
```




