---
title: "Contingency Tables"
subtitle: "Finding Relationships between Categorical Variables"
author: "1.7 in OI"
output:
  xaringan::moon_reader:
    lib_dir: libs
    css: ["default","default-fonts","my_theme.css"]
    nature:
      highlightStyle: github
      highlightLines: true
      countIncrementalSlides: false
      beforeInit: "custom.js"
    chakra: "remark-latest.min.js"
---
# Objectives

### - Construct and interpret contingency tables

### - Describe relationships between categorcial variables
---
# What is a contingency table?

## A **contingency** tables describes two categorical variables, organizing counts according to a row variable and a column variable.
---
```{r echo=FALSE}
#library(readxl)
library(tidyverse)
#at_school <- readRDS("census_at_school.rds")
at_school <- readRDS(url("https://svgsstats.github.io/census_at_school.rds"))
#at_school <- readRDS("census_at_school.rds")
#at_school <- at_school %>% filter(!is.na(Superpower))
#saveRDS(at_school,"census_at_school.rds")
#at_school <- read_excel("census_at_school.xlsx")
#at_school <- at_school %>% mutate_if(is.character,as.factor)
#saveRDS(at_school,"census_at_school.rds")
```
# USA Census at School data

### We are going to create a table to help us analyze the relationship between student responses to the gender question and the superpower question. 

Which of the following superpowers would you most like to have?
.pull-left[
- Invisibility
- Telepathy (read minds)
- Freeze time
]
.pull-right[
- Super strength
- Fly
]
---
# Constructing the Contingency Table

We will use a package called `janitor` to contruct the contingency table.  You will need to install it using the `install.packages("janitor")` call and then load it by using the `library()` function.  Or, it's already installed if you're using the SVGS Workspace on rstudio.cloud. 

```{r}
library(janitor) 
```

The basic format of a call is:

```{r eval=FALSE}
tabyl(dataset, var1, var2)
```

Or, you can use the piping operator and call it like so: 

```{r eval=FALSE}
dataset %>% tabyl(var1,var2)
```

---
# Let's do it!

Since we want the relationship between `Superpower` and `Gender`, we would simply run: 

```{r eval=FALSE}
at_school %>% 
  tabyl(Superpower,Gender)
```

```{r echo=FALSE}
library(knitr)
at_school %>% 
  tabyl(Superpower,Gender) %>% 
  kable(format="html")
```

---
# Want the Totals?

There's an option for that too. 

```{r}
at_school %>% 
  tabyl(Superpower,Gender) %>% adorn_totals(where=c("row","col"))
```
The `adorn_total()` function takes an optional argument `where=` with values `"row"`, `"col"`, or `c("row","col")`.  See the help file for more info. 

```{r eval=FALSE}
?adorn_totals
```

---
# Percentages

Very often it can hard to see relationships in a contingency table when we're looking at raw counts. We can turn the raw counts into percentages as needed. 

```{r}
at_school %>% 
  tabyl(Superpower,Gender) %>% 
  adorn_percentages()
```

---
# Percentages

Very often it can hard to see relationships in a contingency table when we're looking at raw counts. We can turn the raw counts into percentages as needed. 

```{r}
at_school %>% 
  tabyl(Superpower,Gender) %>% 
  adorn_percentages(denominator="col")
```

---
# Percentages

Very often it can hard to see relationships in a contingency table when we're looking at raw counts. We can turn the raw counts into percentages as needed. 

```{r}
at_school %>% 
  tabyl(Superpower,Gender) %>% 
  adorn_percentages(denominator="all") 
```
---
# Creating Bar Graphs

The `geom_bar` geom is the main tool for creating bar graphs. 

```{r fig.width=7, fig.height=5}
at_school %>% ggplot(aes(x=Superpower))+
  geom_bar()
```
---
# Horizontal Bar Graphs

They can be easier to read when viewed horizontally at times. 

```{r fig.height=4.5,fig.width=8}
at_school %>% 
  ggplot(aes(x=Superpower))+
  geom_bar()+
  coord_flip()
```

---
# Stacked Bar Graphs

Stacked bar graphs are useful tools for seeing relationships between categorical variables. 

```{r fig.width=7, fig.height=4.5}
at_school %>% ggplot(aes(x=Superpower,fill=Gender)) + 
  geom_bar()
```
---
# Stacked Bar Graph with Percentages

```{r fig.width=7, fig.height=4.5}
at_school %>% ggplot(aes(x=Superpower,fill=Gender)) + 
  geom_bar(position="fill") +
  labs(y="Proportion")
```

---
# Side-by-side Bar Graphs

```{r fig.width=8, fig.height=5.5}
at_school %>% ggplot(aes(x=Superpower,fill=Gender)) + 
  geom_bar(position="dodge")
```
---
# Can you create this graph? 

```{r echo=FALSE, fig.width=11,fig.height=7}
at_school %>% ggplot(aes(x=Gender,fill=Superpower)) + 
  geom_bar(position="dodge")
```
---
# Custom Colors
```{r}
at_school %>% ggplot(aes(x=Gender,fill=Superpower)) + 
  geom_bar(position="dodge") + 
  scale_fill_brewer(palette="Accent")
```

